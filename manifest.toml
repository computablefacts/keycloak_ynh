#:schema https://raw.githubusercontent.com/YunoHost/apps/master/schemas/manifest.v2.schema.json

packaging_format = 2

id = "keycloak"
name = "Keycloak"
description.en = "Open Source Identity and Access Management"
description.fr = "Gestion des identités et des accès Open Source"

version = "22.0.2~ynh1"

maintainers = ["pbrisacier@mncc.fr"]

[upstream]
license = "apache-2.0"
website = "https://www.keycloak.org/"
demo = "https://demo.example.com"
admindoc = "https://www.keycloak.org/guides#server"
userdoc = "https://www.keycloak.org/docs/22.0.2/server_admin/index.html"
code = "https://github.com/keycloak/keycloak"

[integration]
yunohost = ">= 11.1.21"
architectures = "all"
multi_instance = false

ldap = true
sso = false

# FIXME: replace with an **estimate** minimum disk and RAM requirements. e.g. 20M, 400M, 1G...
disk = "50M"
ram.build = "50M"
ram.runtime = "50M"

[install]
    [install.domain]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "domain"

# FIXME: do not allow subpath install, only root of the domain
    [install.path]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "path"
    default = "/"

    [install.init_main_permission]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    # This won't be saved as setting and will instead be used to initialize the SSOwat permission
    type = "group"
    default = "visitors"

    [install.admin]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "user"

    [install.password]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    # Note that user-provided passwords questions are not automatically saved as setting
    help.en = "Use the help field to add an information for the admin about this question."
    help.fr = "Utilisez le champ aide pour ajouter une information à l'intention de l'administrateur à propos de cette question."
    type = "password"

[resources]
    # See the packaging documentation for the full set
    # of explanation regarding the behavior and properties for each of those

    [resources.sources]

        [resources.sources.main]
        # This will pre-fetch the asset which can then be deployed during the install/upgrade scripts with :
        #    ynh_setup_source --dest_dir="$install_dir"
        # You can also define other assets than "main" and add --source_id="foobar" in the previous command
        url = "https://github.com/keycloak/keycloak/releases/download/22.0.2/keycloak-22.0.2.tar.gz"
        # Keycloak doesnot publish sha256 (only sha1) so I calculate sha256 with this command:
        # curl -sfL https://github.com/keycloak/keycloak/releases/download/22.0.2/keycloak-22.0.2.tar.gz | openssl dgst -sha256
        sha256 = "aeba8132f637018e55444955ae0ed49d64146f304a336044494eacd7b369af68"

        # These infos are used by https://github.com/YunoHost/apps/blob/master/tools/autoupdate_app_sources/autoupdate_app_sources.py
        # to auto-update the previous asset urls and sha256sum + manifest version
        # assuming the upstream's code repo is on github and relies on tags or releases
        # See the 'sources' resource documentation for more details

        # autoupdate.strategy = "latest_github_tag"

    [resources.system_user]
    # This will provision/deprovision a unix system user

    [resources.install_dir]
    # This will create/remove the install dir as /var/www/$app
    # and store the corresponding setting $install_dir

    [resources.permissions]
    # This will configure SSOwat permission for $domain/$path/
    # The initial allowed group of user is configured via the init_main_permission question (public=visitors, private=all_users)
    main.url = "/"

    [resources.ports]
    # This will pick a random port for reverse-proxying and store it as the $port setting

    [resources.apt]
    # This will automatically install/uninstall the following apt packages
    # and implicitly define the $phpversion setting as 8.0 (if phpX.Y-foobar dependencies are listed)
    packages = "openjdk-17-jre"

    [resources.database]
    # This will automatically provision/deprovison a Postgres DB and store the corresponding credentials in settings $db_user, $db_name, $db_pwd
    type = "postgresql"
